'''
===================================================================================================================================
문제
===================================================================================================================================
최소직사각형 ☆
===================================================================================================================================
Log
===================================================================================================================================
2022-04-01 TUE : 문제 파악
                 문제 해결
===================================================================================================================================
'''

'''
Algorithm
1. 명함을 큰 수가 앞 index로 오도록 정렬
2. 지갑의 크기 계산
'''
def solution(sizes):
    answer = 0
    # 더 큰 수가 명함의 가로 길이가 되도록 정렬
    for index in range(len(sizes)):
        if sizes[index][0] < sizes[index][1]:
            sizes[index][0], sizes[index][1] = sizes[index][1], sizes[index][0]

    # 명함의 가로, 세로 길이의 최댓값 구하기
    max_x = 0
    max_y = 0
    for x, y in sizes:
        if max_x < x:
            max_x = x
        if max_y < y:
            max_y = y
    answer = max_x*max_y
    return answer

print(solution([[60, 50], [30, 70], [60, 30], [80, 40]])) # 4000
print(solution([[10, 7], [12, 3], [8, 15], [14, 7], [5, 15]])) # 120
print(solution([[14, 4], [19, 6], [6, 16], [18, 7], [7, 11]])) # 133