'''
===================================================================================================================================
문제
===================================================================================================================================
피로도 ☆☆
===================================================================================================================================
Log
===================================================================================================================================
2022-04-03-SUN : 문제 파악
                 문제 해결
===================================================================================================================================
'''

'''
Algorithm
1. 1부터 던전 개수만큼의 숫자로 순열 만들기
2. 순열에 맞게 몇 개의 던전을 돌 수 있는지 count
3. count의 최댓값 출력
'''

from itertools import permutations
def solution(k, dungeons):
    answer = -1
    # 던전 개수만큼 순열 생성
    dungeon_per = list(permutations(range(len(dungeons)), len(dungeons)))
    
    # 순열에 맞게 던전을 몇 개 돌 수 있는지 count
    for per in dungeon_per:
        now_k = k
        count = 0
        for index in per:
            # 최소 필요 피로도가 맞지 않으면 break
            if now_k < dungeons[index][0]:
                break
            
            # 소모 피로도 계산
            now_k -= dungeons[index][1]
            
            # 던전 개수 count
            count += 1
            
        if answer < count:
            answer = count
    return answer

print(solution(80, [[80,20],[50,40],[30,10]])) # 3