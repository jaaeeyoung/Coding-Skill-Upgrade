'''
===================================================================================================================================
문제
===================================================================================================================================
체육복 ☆
===================================================================================================================================
문제 설명
===================================================================================================================================
' 점심시간에 도둑이 들어, 일부 학생이 체육복을 도난당했습니다. 다행히 여벌 체육복이 있는 학생이 이들에게 체육복을 빌려주려 합니다. 학생들
  의 번호는 체격순으로 매겨져 있어, 바로 앞번호의 학생이나 바로 뒷번호의 학생에게만 체육복을 빌려줄 수 있습니다. 예를 들어, 4번 학생은 3번
  학생이나 5번 학생에게만 체육복을 빌려줄 수 있습니다. 체육복이 없으면 수업을 들을 수 없기 때문에 체육복을 적절히 빌려 최대한 많은 학생이
  체육수업을 들어야 합니다.
' 전체 학생의 수 n, 체육복을 도난당한 학생들의 번호가 담긴 배열 lost, 여벌의 체육복을 가져온 학생들의 번호가 담긴 배열 reserve가 매개변수
  로 주어질 때, 체육수업을 들을 수 있는 학생의 최댓값을 return 하도록 solution 함수를 작성해주세요.
===================================================================================================================================
제한 사항
===================================================================================================================================
' 전체 학생의 수는 2명 이상 30명 이하입니다.
' 체육복을 도난당한 학생의 수는 1명 이상 n명 이하이고 중복되는 번호는 없습니다.
' 여벌의 체육복을 가져온 학생의 수는 1명 이상 n명 이하이고 중복되는 번호는 없습니다.
' 여벌의 체육복이 있는 학생만 다른 학생에게 체육복을 빌려줄 수 있습니다.
' 여벌 체육복을 가져온 학생이 체육복을 도난당했을 수 있습니다. 이때 이 학생은 체육복을 하나만 도난당했다고 가정하며, 남은 체육복이 하나이
  기에 다른 학생에게는 체육복을 빌려줄 수 없습니다.
===================================================================================================================================
입출력 예
===================================================================================================================================
n   lost    reserve     return
5   [2, 4]  [1, 3, 5]   5
5   [2, 4]  [3]         4
3   [3]     [1]         2
===================================================================================================================================
입출력 예 설명
===================================================================================================================================
' 입출력 예 #1

    1번 학생이 2번 학생에게 체육복을 빌려주고, 3번 학생이나 5번 학생이 4번 학생에게 체육복을 빌려주면 학생 5명이 체육수업을 들을 수 있습
    니다.

' 입출력 예 #2

    3번 학생이 2번 학생이나 4번 학생에게 체육복을 빌려주면 학생 4명이 체육 수업을 들을 수 있습니다.
===================================================================================================================================
Log
===================================================================================================================================
2021-11-10-Wed : 문제 파악
                 채점 테스트 3 ~ 5, 7 ~ 9, 11 실패
                 체육복 빌려주기에서 answer의 증가 연산을 각 if문 안으로 넣음
                 -> 채점 테스트 11, 13 ~ 16 실패 (75점)
                 체육복 빌려주기를 앞 사람에게 빌려주는 경우와 뒷 사람에게 빌려주는 경우를 각각 다른 for문 이용
                 -> 채점 테스트 17 ~ 20 실패 (80점)
                 두 개로 나눴던 for문을 하나로 합치고 i의 범위 재설정
                 -> 문제 해결
===================================================================================================================================
'''

def solution(n, lost, reserve):
    answer = 0
    # 빌려줄 체육복이 존재하는지
    check = [False for _ in range(n)]
    # 체육 수업을 들을 수 있는지
    result = [False for _ in range(n)]
    
    # check, result 초기화
    for i in range(n):
        # 체육복을 잃어버리지 않은 학생은 모두 체육 수업을 들을 수 있음
        if i+1 not in lost:
            result[i] = True
            answer += 1
            # 빌려줄 체육복이 존재하는 학생은 모두 True
            if i+1 in reserve:
                check[i] = True
        # 여벌의 체육복을 가지고 있는 학생이 체육복을 도난당한 경우에도 체육 수업을 들을 수 있음
        if i+1 in lost and i+1 in reserve:
            result[i] = True
            answer += 1

    # 체육복 빌려주기
    for i in range(n-1):
        # 현재 index의 학생이 체육복을 빌려줄 수 있고 이전 index의 학생은 체육복이 없는 경우 (현재 index의 학생이 첫 번째 학생이라면 통과)
        if check[i+1] == True and result[i] == False:
            # 빌려줬기 때문에 현재 index의 학생은 이제 체육복을 빌려줄 수 없음
            check[i+1] = False
            # 빌린 학생은 이제 체육 수업을 들을 수 있음
            result[i] = True
            answer += 1
        
        # 현재 index의 학생이 체육복을 빌려줄 수 있고 다음 index의 학생은 체육복이 없는 경우
        elif check[i] == True and result[i+1] == False:
            # 빌려줬기 때문에 현재 index의 학생은 이제 체육복을 빌려줄 수 없음
            check[i] = False
            # 빌린 학생은 이제 체육 수업을 들을 수 있음
            result[i+1] = True
            answer += 1        
    
    return answer

print(solution(5, [2, 4], [1, 3, 5])) # 5
print(solution(5, [2, 4], [3])) # 4
print(solution(3, [3], [1])) # 2
print(solution(5, [2, 4], [1, 2])) # 4
print(solution(5, [1, 2, 3], [2, 3, 4])) # 4
print(solution(5, [2, 3, 4], [1, 2, 3])) # 4
print(solution(3, [], [])) # 3
print(solution(3, [1, 2, 3], [])) # 0
print(solution(3, [], [1, 2, 3])) # 3
print(solution(3, [1], [3])) # 2
print(solution(3, [1, 2], [2, 3])) # 2
print(solution(10, [5, 4, 3, 2, 1], [3, 1, 2, 5, 4])) # 10
print(solution(4, [3, 1], [2, 4])) # 4
print(solution(5, [3, 5], [2, 4])) # 5
print(solution(5, [2, 4], [3, 5])) # 5